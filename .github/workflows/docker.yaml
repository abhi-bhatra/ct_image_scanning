name: Cancer Predcition App CI/CD

env:
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  CLUSTER_RESOURCE_GROUP: ${{ secrets.CLUSTER_RESOURCE_GROUP }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  APP_NAME: cancer-app
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: us-central1

on: 
  push:
    branches: [ master ]

jobs:
  # Job 1
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build and Push tagged Docker image
        run: |
          docker build -t ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.run_id }} cancer_app/
          docker push ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.run_id }}
      - name: Build and Push the latest Docker image
        run: |
          docker build -t ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:latest cancer_app/
          docker push ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:latest
    
  # Job 2  
  aks-k8s-build:
    if: contains(github.event.head_commit.message, 'aks-build')
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v1
      - name: install Azure CLI
        run: pip install azure-cli
      - name: configure kubernetes
        run: |
          az login -u ${{ secrets.AZURE_USER }} -p ${{ secrets.AZURE_PASS }}
          az account set --subscription ${{ secrets.AZURE_SUB }}
          az aks get-credentials --resource-group ${{ secrets.CLUSTER_RESOURCE_GROUP }} --name ${{ secrets.CLUSTER_NAME }}
      - name: deploy App
        run: | 
          kubectl apply -k k8s/
          kubectl set image deployment ml-deployment mlapi=${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.run_id }} -n ${{ secrets.NAMESPACE }} 
          
  # Job 3
  gcp-k8s-build:
    if: contains(github.event.head_commit.message, 'gcp-build')
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
    - id: auth
      uses: google-github-actions/auth@v0.4.0
      with:
        workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'my-service-account@my-project.iam.gserviceaccount.com'
    - id: get-gke-credentials
      uses: google-github-actions/get-gke-credentials@v0.4.0
      with:
        cluster_name: ${{ secrets.CLUSTER_NAME }}
        location: ${{ env.GKE_ZONE }}
    - id: get-pods
      run: |
        kubectl apply -k k8s/
        kubectl set image deployment ml-deployment mlapi=${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.run_id }} -n ${{ secrets.NAMESPACE }}
        
  # Job 4
  aws-k8s-build:
    if: contains(github.event.head_commit.message, 'aws-build')
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: INSTALL AWS CLI
        run: |
          apt-get install curl zip unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
          aws --version
      - name: SET ACCESS CREDENTIALS
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_DEFAULT_REGION
          aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - name: UPDATE DOCKER IMAGE
        run: |
          kubectl apply -k k8s/
          kubectl set image deployment ml-deployment mlapi=${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.run_id }} -n ${{ secrets.NAMESPACE }}
          
